>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Multiply two matrices.

    Args:
        m_a (list): A list of lists representing the first matrix.
        m_b (list): A list of lists representing the second matrix.

    Returns:
        list: A new matrix representing the result of the multiplication.

    Raises:
        TypeError: If m_a or m_b is not a list, not a list of lists, or if elements are not integers or floats.
        ValueError: If m_a or m_b is empty, or if matrices cannot be multiplied.

    Examples:
        >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
        [[7, 10], [15, 22]]

        >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
        [[13, 16]]

        >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
        [[58, 64], [139, 154]]

        >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8]])
        Traceback (most recent call last):
            ...
        ValueError: m_a and m_b can't be multiplied

        >>> matrix_mul([[1, 2], [3, 'a']], [[1, 2], [3, 4]])
        Traceback (most recent call last):
            ...
        TypeError: m_a should contain only integers or floats

        >>> matrix_mul([], [])
        Traceback (most recent call last):
            ...
        ValueError: m_a can't be empty

        >>> matrix_mul([[1, 2], [3, 4]], 'invalid')
        Traceback (most recent call last):
            ...
        TypeError: m_b must be a list

        >>> matrix_mul(123, [[1, 2], [3, 4]])
        Traceback (most recent call last):
            ...
        TypeError: m_a must be a list
